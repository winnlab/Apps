@font-face {
  font-family: HermesCTT;
  font-weight: normal;
  font-style: normal;
  src: url("/fonts/HermesCTT/HermesCTT.eot");
  src: url("/fonts/HermesCTT/HermesCTT.eot?#iefix") format("embedded-opentype"), url("/fonts/HermesCTT/HermesCTT.woff2") format("woff2"), url("/fonts/HermesCTT/HermesCTT.woff") format("woff"), url("/fonts/HermesCTT/HermesCTT.ttf") format("truetype"), url("/fonts/HermesCTT/HermesCTT.svg#HermesCTT") format("svg"); }
@font-face {
  font-family: NFLVikings;
  font-weight: normal;
  font-style: normal;
  src: url("/fonts/NFLVikings/NFLVikings.eot");
  src: url("/fonts/NFLVikings/NFLVikings.eot?#iefix") format("embedded-opentype"), url("/fonts/NFLVikings/NFLVikings.woff2") format("woff2"), url("/fonts/NFLVikings/NFLVikings.woff") format("woff"), url("/fonts/NFLVikings/NFLVikings.ttf") format("truetype"), url("/fonts/NFLVikings/NFLVikings.svg#NFLVikings") format("svg"); }
@font-face {
  font-family: PFDinTextCompPro;
  font-weight: 200;
  font-style: normal;
  src: url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.eot");
  src: url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.eot?#iefix") format("embedded-opentype"), url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.woff2") format("woff2"), url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.woff") format("woff"), url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.ttf") format("truetype"), url("/fonts/PFDinTextCompPro-Thin/PFDinTextCompPro-Thin.svg#PFDinTextCompPro") format("svg"); }
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html {
  font-size: 16px; }

html, body {
  width: 100%;
  height: 100%;
  min-height: 45.625rem; }

body {
  font-family: PFDinTextCondPro;
  min-width: 1000px;
  position: relative; }

#modules {
  height: 100%; }

module {
  position: relative;
  min-height: 100%;
  display: none; }
  module.active {
    display: block; }

html {
  font-size: 11.99414px; }

@media (min-width: 1024px) {
  html {
    font-size: 11.99414px; } }
@media (min-width: 1152px) {
  html {
    font-size: 13.49341px; } }
@media (min-width: 1280px) {
  html {
    font-size: 14.99268px; } }
@media (min-width: 1366px) {
  html {
    font-size: 16px; } }
@media (min-width: 1400px) {
  html {
    font-size: 16.39824px; } }
@media (min-width: 1440px) {
  html {
    font-size: 16.86676px; } }
@media (min-width: 1536px) {
  html {
    font-size: 17.99122px; } }
@media (min-width: 1600px) {
  html {
    font-size: 18.74085px; } }
@media (min-width: 1680px) {
  html {
    font-size: 19.67789px; } }
@media (min-width: 1980px) {
  html {
    font-size: 23.1918px; } }
@media (min-width: 2000px) {
  html {
    font-size: 23.42606px; } }
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
#checker {
  position: relative;
  overflow-x: hidden; }
  #checker .apple-1 {
    position: absolute;
    top: 1.9375rem;
    right: 19.8125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -93px -590px;
    width: 76px;
    height: 53px; }
    @media (min-width: 1152px) {
      #checker .apple-1 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -190px -664px;
        width: 86px;
        height: 59px; } }
    @media (min-width: 1280px) {
      #checker .apple-1 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -211px -737px;
        width: 95px;
        height: 66px; } }
    @media (min-width: 1366px) {
      #checker .apple-1 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -226px -787px;
        width: 102px;
        height: 70px; } }
    @media (min-width: 1400px) {
      #checker .apple-1 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -231px -806px;
        width: 104px;
        height: 72px; } }
    @media (min-width: 1440px) {
      #checker .apple-1 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -237px -829px;
        width: 107px;
        height: 74px; } }
    @media (min-width: 1536px) {
      #checker .apple-1 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -253px -884px;
        width: 114px;
        height: 79px; } }
    @media (min-width: 1600px) {
      #checker .apple-1 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -264px -922px;
        width: 119px;
        height: 82px; } }
    @media (min-width: 1680px) {
      #checker .apple-1 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -152px -967px;
        width: 125px;
        height: 87px; } }
    @media (min-width: 1980px) {
      #checker .apple-1 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -327px -1140px;
        width: 148px;
        height: 102px; } }
    @media (min-width: 2000px) {
      #checker .apple-1 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -330px -1152px;
        width: 149px;
        height: 103px; } }
  #checker .apple-2 {
    position: absolute;
    right: 21.5625rem;
    bottom: 13.1875rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -169px -590px;
    width: 71px;
    height: 53px; }
    @media (min-width: 1152px) {
      #checker .apple-2 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -554px -553px;
        width: 79px;
        height: 60px; } }
    @media (min-width: 1280px) {
      #checker .apple-2 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -614px -614px;
        width: 88px;
        height: 67px; } }
    @media (min-width: 1366px) {
      #checker .apple-2 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -656px -656px;
        width: 94px;
        height: 71px; } }
    @media (min-width: 1400px) {
      #checker .apple-2 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -674px -672px;
        width: 97px;
        height: 73px; } }
    @media (min-width: 1440px) {
      #checker .apple-2 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -692px -691px;
        width: 99px;
        height: 75px; } }
    @media (min-width: 1536px) {
      #checker .apple-2 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -739px -737px;
        width: 106px;
        height: 80px; } }
    @media (min-width: 1600px) {
      #checker .apple-2 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -769px -768px;
        width: 110px;
        height: 83px; } }
    @media (min-width: 1680px) {
      #checker .apple-2 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -277px -967px;
        width: 116px;
        height: 87px; } }
    @media (min-width: 1980px) {
      #checker .apple-2 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -953px -950px;
        width: 137px;
        height: 103px; } }
    @media (min-width: 2000px) {
      #checker .apple-2 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -962px -960px;
        width: 138px;
        height: 104px; } }
  #checker .apple-3 {
    position: absolute;
    top: 2.25rem;
    left: 22.625rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -647px 0px;
    width: 63px;
    height: 45px;
    z-index: 1; }
    @media (min-width: 1152px) {
      #checker .apple-3 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -549px -664px;
        width: 71px;
        height: 51px; } }
    @media (min-width: 1280px) {
      #checker .apple-3 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -808px 0px;
        width: 79px;
        height: 56px; } }
    @media (min-width: 1366px) {
      #checker .apple-3 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -863px 0px;
        width: 84px;
        height: 60px; } }
    @media (min-width: 1400px) {
      #checker .apple-3 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -667px -806px;
        width: 86px;
        height: 62px; } }
    @media (min-width: 1440px) {
      #checker .apple-3 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -910px 0px;
        width: 89px;
        height: 63px; } }
    @media (min-width: 1536px) {
      #checker .apple-3 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -730px -884px;
        width: 94px;
        height: 68px; } }
    @media (min-width: 1600px) {
      #checker .apple-3 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -1011px 0px;
        width: 98px;
        height: 70px; } }
    @media (min-width: 1680px) {
      #checker .apple-3 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -1060px 0px;
        width: 103px;
        height: 74px; } }
    @media (min-width: 1980px) {
      #checker .apple-3 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -1251px 0px;
        width: 122px;
        height: 87px; } }
    @media (min-width: 2000px) {
      #checker .apple-3 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -1263px 0px;
        width: 123px;
        height: 88px; } }
  #checker .apple-4 {
    position: absolute;
    bottom: 0;
    left: 0;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -647px -171px;
    width: 50px;
    height: 40px; }
    @media (min-width: 1152px) {
      #checker .apple-4 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -728px -145px;
        width: 56px;
        height: 45px; } }
    @media (min-width: 1280px) {
      #checker .apple-4 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -808px -214px;
        width: 62px;
        height: 50px; } }
    @media (min-width: 1366px) {
      #checker .apple-4 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -863px -227px;
        width: 66px;
        height: 53px; } }
    @media (min-width: 1400px) {
      #checker .apple-4 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -884px -177px;
        width: 68px;
        height: 55px; } }
    @media (min-width: 1440px) {
      #checker .apple-4 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -910px -239px;
        width: 70px;
        height: 56px; } }
    @media (min-width: 1536px) {
      #checker .apple-4 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -969px -194px;
        width: 74px;
        height: 60px; } }
    @media (min-width: 1600px) {
      #checker .apple-4 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -1011px -266px;
        width: 78px;
        height: 62px; } }
    @media (min-width: 1680px) {
      #checker .apple-4 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -1060px -282px;
        width: 81px;
        height: 66px; } }
    @media (min-width: 1980px) {
      #checker .apple-4 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -1251px -330px;
        width: 96px;
        height: 77px; } }
    @media (min-width: 2000px) {
      #checker .apple-4 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -1263px -334px;
        width: 97px;
        height: 78px; } }
  #checker .apple-5 {
    position: absolute;
    top: 17.75rem;
    right: -0.125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -93px -590px;
    width: 76px;
    height: 53px; }
    @media (min-width: 1152px) {
      #checker .apple-5 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -190px -664px;
        width: 86px;
        height: 59px; } }
    @media (min-width: 1280px) {
      #checker .apple-5 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -211px -737px;
        width: 95px;
        height: 66px; } }
    @media (min-width: 1366px) {
      #checker .apple-5 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -226px -787px;
        width: 102px;
        height: 70px; } }
    @media (min-width: 1400px) {
      #checker .apple-5 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -231px -806px;
        width: 104px;
        height: 72px; } }
    @media (min-width: 1440px) {
      #checker .apple-5 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -237px -829px;
        width: 107px;
        height: 74px; } }
    @media (min-width: 1536px) {
      #checker .apple-5 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -253px -884px;
        width: 114px;
        height: 79px; } }
    @media (min-width: 1600px) {
      #checker .apple-5 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -264px -922px;
        width: 119px;
        height: 82px; } }
    @media (min-width: 1680px) {
      #checker .apple-5 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -152px -967px;
        width: 125px;
        height: 87px; } }
    @media (min-width: 1980px) {
      #checker .apple-5 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -327px -1140px;
        width: 148px;
        height: 102px; } }
    @media (min-width: 2000px) {
      #checker .apple-5 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -330px -1152px;
        width: 149px;
        height: 103px; } }
  #checker .notebook {
    position: absolute;
    right: -0.125rem;
    bottom: 0;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -370px -237px;
    width: 209px;
    height: 113px; }
    @media (min-width: 1152px) {
      #checker .notebook {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -416px -268px;
        width: 235px;
        height: 127px; } }
    @media (min-width: 1280px) {
      #checker .notebook {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -462px -297px;
        width: 261px;
        height: 141px; } }
    @media (min-width: 1366px) {
      #checker .notebook {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -493px -317px;
        width: 279px;
        height: 150px; } }
    @media (min-width: 1400px) {
      #checker .notebook {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -505px -325px;
        width: 286px;
        height: 154px; } }
    @media (min-width: 1440px) {
      #checker .notebook {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -520px -334px;
        width: 294px;
        height: 158px; } }
    @media (min-width: 1536px) {
      #checker .notebook {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -554px -356px;
        width: 313px;
        height: 169px; } }
    @media (min-width: 1600px) {
      #checker .notebook {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -578px -372px;
        width: 326px;
        height: 176px; } }
    @media (min-width: 1680px) {
      #checker .notebook {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -606px -390px;
        width: 343px;
        height: 185px; } }
    @media (min-width: 1980px) {
      #checker .notebook {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -715px -460px;
        width: 404px;
        height: 218px; } }
    @media (min-width: 2000px) {
      #checker .notebook {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -722px -464px;
        width: 408px;
        height: 220px; } }
  #checker .board {
    position: absolute;
    top: -0.0625rem;
    left: 1.0625rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -370px 0px;
    width: 277px;
    height: 121px; }
    @media (min-width: 1152px) {
      #checker .board {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -416px 0px;
        width: 312px;
        height: 137px; } }
    @media (min-width: 1280px) {
      #checker .board {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -462px 0px;
        width: 346px;
        height: 152px; } }
    @media (min-width: 1366px) {
      #checker .board {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -493px 0px;
        width: 370px;
        height: 162px; } }
    @media (min-width: 1400px) {
      #checker .board {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -505px 0px;
        width: 379px;
        height: 166px; } }
    @media (min-width: 1440px) {
      #checker .board {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -520px 0px;
        width: 390px;
        height: 171px; } }
    @media (min-width: 1536px) {
      #checker .board {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -554px 0px;
        width: 415px;
        height: 182px; } }
    @media (min-width: 1600px) {
      #checker .board {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -578px 0px;
        width: 433px;
        height: 190px; } }
    @media (min-width: 1680px) {
      #checker .board {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -606px 0px;
        width: 454px;
        height: 199px; } }
    @media (min-width: 1980px) {
      #checker .board {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -715px 0px;
        width: 536px;
        height: 235px; } }
    @media (min-width: 2000px) {
      #checker .board {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -722px 0px;
        width: 541px;
        height: 237px; } }
  #checker .bottle {
    position: absolute;
    bottom: 12.3125rem;
    left: 12.8125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -370px -121px;
    width: 73px;
    height: 116px; }
    @media (min-width: 1152px) {
      #checker .bottle {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -416px -137px;
        width: 82px;
        height: 131px; } }
    @media (min-width: 1280px) {
      #checker .bottle {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -462px -152px;
        width: 92px;
        height: 145px; } }
    @media (min-width: 1366px) {
      #checker .bottle {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -493px -162px;
        width: 98px;
        height: 155px; } }
    @media (min-width: 1400px) {
      #checker .bottle {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -505px -166px;
        width: 100px;
        height: 159px; } }
    @media (min-width: 1440px) {
      #checker .bottle {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -520px -171px;
        width: 103px;
        height: 163px; } }
    @media (min-width: 1536px) {
      #checker .bottle {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -554px -182px;
        width: 110px;
        height: 174px; } }
    @media (min-width: 1600px) {
      #checker .bottle {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -578px -190px;
        width: 114px;
        height: 182px; } }
    @media (min-width: 1680px) {
      #checker .bottle {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -606px -199px;
        width: 120px;
        height: 191px; } }
    @media (min-width: 1980px) {
      #checker .bottle {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -715px -235px;
        width: 142px;
        height: 225px; } }
    @media (min-width: 2000px) {
      #checker .bottle {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -722px -237px;
        width: 143px;
        height: 227px; } }
  #checker .question {
    font-size: 5.4375rem;
    font-weight: normal;
    text-align: center;
    text-transform: uppercase;
    margin: 9.25rem 0 3.75rem;
    padding-left: 0.375rem;
    color: #fff;
    position: relative;
    z-index: 1; }
    #checker .question.not18 {
      margin-top: 6.25rem; }
  #checker .btns {
    text-align: center; }
    #checker .btns div {
      overflow: hidden;
      position: relative;
      cursor: pointer;
      display: inline-block;
      font-family: NFLVikings;
      font-size: 1.875rem;
      height: 2.5625rem;
      width: 5.5rem;
      padding: 0.5625rem;
      color: #fff; }
      #checker .btns div:hover .dashing:nth-of-type(1) {
        -webkit-transform: translateX(50%);
        -moz-transform: translateX(50%);
        -ms-transform: translateX(50%);
        -o-transform: translateX(50%);
        transform: translateX(50%); }
      #checker .btns div:hover .dashing:nth-of-type(2) {
        -webkit-transform: translateY(50%);
        -moz-transform: translateY(50%);
        -ms-transform: translateY(50%);
        -o-transform: translateY(50%);
        transform: translateY(50%); }
      #checker .btns div:hover .dashing:nth-of-type(3) {
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%); }
      #checker .btns div:hover .dashing:nth-of-type(4) {
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        transform: translateY(-50%); }
      #checker .btns div.no {
        margin-left: 5.5rem; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
body {
  background-image: url("/img-dist/bgSm.jpg");
  background-position: top left;
  font-family: HermesCTT; }
  body:after {
    content: '';
    background: url("/img-dist/productBg.jpg"); }

.socNetworks {
  position: absolute;
  top: 5.3125rem;
  right: 2.6875rem;
  z-index: 10;
  width: 10.25rem; }
  .socNetworks a {
    height: 2.625rem;
    width: 2.625rem;
    display: inline-block;
    position: relative; }
    .socNetworks a:before {
      content: '';
      display: block; }
    .socNetworks a.fb:before {
      background-image: url(../../../img/1024/sprites.png);
      background-position: -696px -45px;
      width: 9px;
      height: 19px;
      margin: 0.5rem 0 0 0.875rem; }
      @media (min-width: 1152px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1152/sprites.png);
          background-position: -870px -99px;
          width: 10px;
          height: 21px; } }
      @media (min-width: 1280px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1280/sprites.png);
          background-position: -869px -56px;
          width: 11px;
          height: 24px; } }
      @media (min-width: 1366px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1366/sprites.png);
          background-position: -929px -60px;
          width: 12px;
          height: 25px; } }
      @media (min-width: 1400px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1400/sprites.png);
          background-position: -1057px -121px;
          width: 12px;
          height: 26px; } }
      @media (min-width: 1440px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1440/sprites.png);
          background-position: -979px -63px;
          width: 12px;
          height: 27px; } }
      @media (min-width: 1536px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1536/sprites.png);
          background-position: -1159px -133px;
          width: 13px;
          height: 28px; } }
      @media (min-width: 1600px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1600/sprites.png);
          background-position: -1088px -70px;
          width: 14px;
          height: 30px; } }
      @media (min-width: 1680px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1680/sprites.png);
          background-position: -1141px -74px;
          width: 14px;
          height: 31px; } }
      @media (min-width: 1980px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/1980/sprites.png);
          background-position: -1346px -87px;
          width: 17px;
          height: 37px; } }
      @media (min-width: 2000px) {
        .socNetworks a.fb:before {
          background-image: url(../../../img/2000/sprites.png);
          background-position: -1359px -88px;
          width: 17px;
          height: 37px; } }
    .socNetworks a.vk {
      margin-left: 0.9375rem; }
      .socNetworks a.vk:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -696px -88px;
        width: 12px;
        height: 13px;
        margin: 0.75rem 0 0 0.875rem; }
        @media (min-width: 1152px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -861px -145px;
            width: 13px;
            height: 14px; } }
        @media (min-width: 1280px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -869px -110px;
            width: 15px;
            height: 16px; } }
        @media (min-width: 1366px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -929px -85px;
            width: 16px;
            height: 17px; } }
        @media (min-width: 1400px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -1045px -177px;
            width: 16px;
            height: 18px; } }
        @media (min-width: 1440px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -979px -123px;
            width: 17px;
            height: 18px; } }
        @media (min-width: 1536px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -1145px -194px;
            width: 18px;
            height: 19px; } }
        @media (min-width: 1600px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -1088px -100px;
            width: 18px;
            height: 20px; } }
        @media (min-width: 1680px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -1141px -105px;
            width: 19px;
            height: 21px; } }
        @media (min-width: 1980px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -1346px -124px;
            width: 23px;
            height: 25px; } }
        @media (min-width: 2000px) {
          .socNetworks a.vk:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -1359px -125px;
            width: 23px;
            height: 25px; } }
    .socNetworks a.yt {
      margin-left: 0.9375rem; }
      .socNetworks a.yt:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -696px -64px;
        width: 14px;
        height: 17px;
        margin: 0.5625rem 0 0 0.6875rem; }
        @media (min-width: 1152px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -870px -120px;
            width: 16px;
            height: 20px; } }
        @media (min-width: 1280px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -869px -80px;
            width: 18px;
            height: 22px; } }
        @media (min-width: 1366px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -914px -280px;
            width: 19px;
            height: 23px; } }
        @media (min-width: 1400px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -1057px -147px;
            width: 20px;
            height: 24px; } }
        @media (min-width: 1440px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -979px -90px;
            width: 20px;
            height: 24px; } }
        @media (min-width: 1536px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -1159px -161px;
            width: 22px;
            height: 26px; } }
        @media (min-width: 1600px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -1071px -328px;
            width: 22px;
            height: 27px; } }
        @media (min-width: 1680px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -1123px -348px;
            width: 24px;
            height: 29px; } }
        @media (min-width: 1980px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -1325px -407px;
            width: 28px;
            height: 34px; } }
        @media (min-width: 2000px) {
          .socNetworks a.yt:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -1338px -412px;
            width: 28px;
            height: 34px; } }
    .socNetworks a span {
      display: block;
      background-image: url(../../../img/1024/sprites.png);
      background-position: -647px -280px;
      width: 32px;
      height: 31px;
      position: absolute;
      top: 0;
      left: 0;
      -webkit-transition: all 3s linear;
      -moz-transition: all 3s linear;
      transition: all 3s linear; }
      @media (min-width: 1152px) {
        .socNetworks a span {
          background-image: url(../../../img/1152/sprites.png);
          background-position: -764px -190px;
          width: 36px;
          height: 35px; } }
      @media (min-width: 1280px) {
        .socNetworks a span {
          background-image: url(../../../img/1280/sprites.png);
          background-position: -808px -350px;
          width: 40px;
          height: 39px; } }
      @media (min-width: 1366px) {
        .socNetworks a span {
          background-image: url(../../../img/1366/sprites.png);
          background-position: -905px -331px;
          width: 42px;
          height: 42px; } }
      @media (min-width: 1400px) {
        .socNetworks a span {
          background-image: url(../../../img/1400/sprites.png);
          background-position: -927px -232px;
          width: 43px;
          height: 43px; } }
      @media (min-width: 1440px) {
        .socNetworks a span {
          background-image: url(../../../img/1440/sprites.png);
          background-position: -910px -392px;
          width: 45px;
          height: 44px; } }
      @media (min-width: 1536px) {
        .socNetworks a span {
          background-image: url(../../../img/1536/sprites.png);
          background-position: -1017px -254px;
          width: 48px;
          height: 47px; } }
      @media (min-width: 1600px) {
        .socNetworks a span {
          background-image: url(../../../img/1600/sprites.png);
          background-position: -1011px -436px;
          width: 50px;
          height: 49px; } }
      @media (min-width: 1680px) {
        .socNetworks a span {
          background-image: url(../../../img/1680/sprites.png);
          background-position: -1060px -461px;
          width: 52px;
          height: 51px; } }
      @media (min-width: 1980px) {
        .socNetworks a span {
          background-image: url(../../../img/1980/sprites.png);
          background-position: -1312px -480px;
          width: 61px;
          height: 60px; } }
      @media (min-width: 2000px) {
        .socNetworks a span {
          background-image: url(../../../img/2000/sprites.png);
          background-position: -1263px -547px;
          width: 62px;
          height: 61px; } }
    .socNetworks a:hover span {
      -webkit-transform: rotate(360deg);
      -moz-transform: rotate(360deg);
      -ms-transform: rotate(360deg);
      -o-transform: rotate(360deg);
      transform: rotate(360deg); }

.back {
  position: absolute;
  top: 4.75rem;
  left: 0;
  z-index: 10;
  height: 3.75rem;
  width: 11.75rem;
  padding: 1.3125rem 1.875rem 0.875rem 1.0625rem;
  text-decoration: none;
  text-transform: uppercase;
  font-family: NFLVikings;
  font-size: 1.375rem;
  color: white; }
  .back:after {
    position: absolute;
    top: 0;
    left: 0;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -420px -590px;
    width: 143px;
    height: 46px;
    content: ''; }
    @media (min-width: 1152px) {
      .back:after {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -728px 0px;
        width: 161px;
        height: 51px; } }
    @media (min-width: 1280px) {
      .back:after {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -531px -737px;
        width: 179px;
        height: 57px; } }
    @media (min-width: 1366px) {
      .back:after {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -567px -787px;
        width: 191px;
        height: 61px; } }
    @media (min-width: 1400px) {
      .back:after {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -884px 0px;
        width: 196px;
        height: 62px; } }
    @media (min-width: 1440px) {
      .back:after {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -597px -829px;
        width: 202px;
        height: 64px; } }
    @media (min-width: 1536px) {
      .back:after {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -969px 0px;
        width: 215px;
        height: 68px; } }
    @media (min-width: 1600px) {
      .back:after {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -664px -922px;
        width: 224px;
        height: 71px; } }
    @media (min-width: 1680px) {
      .back:after {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -687px -967px;
        width: 235px;
        height: 75px; } }
    @media (min-width: 1980px) {
      .back:after {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -822px -1140px;
        width: 277px;
        height: 88px; } }
    @media (min-width: 2000px) {
      .back:after {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -830px -1152px;
        width: 280px;
        height: 89px; } }

.newProducts {
  position: relative;
  height: 3rem;
  background: #d4d4d4; }
  .newProducts .logo {
    position: absolute;
    top: 0.5rem;
    right: 15.3125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -647px -311px;
    width: 57px;
    height: 23px; }
    @media (min-width: 1152px) {
      .newProducts .logo {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -800px -190px;
        width: 65px;
        height: 25px; } }
    @media (min-width: 1280px) {
      .newProducts .logo {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -808px -389px;
        width: 72px;
        height: 28px; } }
    @media (min-width: 1366px) {
      .newProducts .logo {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -863px -373px;
        width: 76px;
        height: 30px; } }
    @media (min-width: 1400px) {
      .newProducts .logo {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -970px -232px;
        width: 78px;
        height: 31px; } }
    @media (min-width: 1440px) {
      .newProducts .logo {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -910px -436px;
        width: 81px;
        height: 32px; } }
    @media (min-width: 1536px) {
      .newProducts .logo {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -1065px -254px;
        width: 86px;
        height: 34px; } }
    @media (min-width: 1600px) {
      .newProducts .logo {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -1011px -485px;
        width: 90px;
        height: 35px; } }
    @media (min-width: 1680px) {
      .newProducts .logo {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -1060px -512px;
        width: 94px;
        height: 37px; } }
    @media (min-width: 1980px) {
      .newProducts .logo {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -1251px -540px;
        width: 111px;
        height: 44px; } }
    @media (min-width: 2000px) {
      .newProducts .logo {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -1263px -608px;
        width: 112px;
        height: 44px; } }
    .newProducts .logo:hover {
      background-image: url(../../../img/1024/sprites.png);
      background-position: -647px -334px;
      width: 61px;
      height: 23px; }
      @media (min-width: 1152px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1152/sprites.png);
          background-position: -728px -225px;
          width: 69px;
          height: 25px; } }
      @media (min-width: 1280px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1280/sprites.png);
          background-position: -808px -417px;
          width: 77px;
          height: 28px; } }
      @media (min-width: 1366px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1366/sprites.png);
          background-position: -863px -403px;
          width: 82px;
          height: 30px; } }
      @media (min-width: 1400px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1400/sprites.png);
          background-position: -884px -275px;
          width: 84px;
          height: 31px; } }
      @media (min-width: 1440px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1440/sprites.png);
          background-position: -910px -468px;
          width: 86px;
          height: 32px; } }
      @media (min-width: 1536px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1536/sprites.png);
          background-position: -969px -301px;
          width: 92px;
          height: 34px; } }
      @media (min-width: 1600px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1600/sprites.png);
          background-position: -1011px -520px;
          width: 96px;
          height: 35px; } }
      @media (min-width: 1680px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1680/sprites.png);
          background-position: -1060px -549px;
          width: 101px;
          height: 37px; } }
      @media (min-width: 1980px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/1980/sprites.png);
          background-position: -1251px -584px;
          width: 119px;
          height: 44px; } }
      @media (min-width: 2000px) {
        .newProducts .logo:hover {
          background-image: url(../../../img/2000/sprites.png);
          background-position: -1263px -652px;
          width: 120px;
          height: 44px; } }
  .newProducts .copyright {
    display: none; }

.healtWarn {
  height: 6.875rem;
  padding: 1.75rem 3rem 0 0;
  background: #fff;
  font-family: PFDinTextCompPro;
  font-size: 3.5rem;
  font-weight: 200;
  text-align: center;
  text-transform: uppercase;
  position: relative; }
  .healtWarn:after {
    position: absolute;
    top: 2rem;
    right: 1.25rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -647px -211px;
    width: 38px;
    height: 38px;
    display: block;
    content: ''; }
    @media (min-width: 1152px) {
      .healtWarn:after {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -838px -51px;
        width: 43px;
        height: 43px; } }
    @media (min-width: 1280px) {
      .healtWarn:after {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -808px -264px;
        width: 48px;
        height: 47px; } }
    @media (min-width: 1366px) {
      .healtWarn:after {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -863px -280px;
        width: 51px;
        height: 51px; } }
    @media (min-width: 1400px) {
      .healtWarn:after {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -1018px -62px;
        width: 53px;
        height: 52px; } }
    @media (min-width: 1440px) {
      .healtWarn:after {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -910px -295px;
        width: 54px;
        height: 53px; } }
    @media (min-width: 1536px) {
      .healtWarn:after {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -1117px -68px;
        width: 58px;
        height: 57px; } }
    @media (min-width: 1600px) {
      .healtWarn:after {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -1011px -328px;
        width: 60px;
        height: 59px; } }
    @media (min-width: 1680px) {
      .healtWarn:after {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -1060px -348px;
        width: 63px;
        height: 62px; } }
    @media (min-width: 1980px) {
      .healtWarn:after {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -1251px -407px;
        width: 74px;
        height: 73px; } }
    @media (min-width: 2000px) {
      .healtWarn:after {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -1263px -412px;
        width: 75px;
        height: 74px; } }

.dashing {
  -webkit-transition: all 2s linear;
  -moz-transition: all 2s linear;
  transition: all 2s linear;
  display: block; }

.dashing:nth-of-type(1) {
  border-top: 3px dashed #fff;
  width: 200%;
  -webkit-transform: translateX(0%);
  -moz-transform: translateX(0%);
  -ms-transform: translateX(0%);
  -o-transform: translateX(0%);
  transform: translateX(0%);
  position: absolute;
  top: 0;
  right: 0; }

.dashing:nth-of-type(2) {
  border-right: 3px dashed #fff;
  height: 200%;
  -webkit-transform: translateY(0%);
  -moz-transform: translateY(0%);
  -ms-transform: translateY(0%);
  -o-transform: translateY(0%);
  transform: translateY(0%);
  position: absolute;
  right: 0;
  bottom: 0; }

.dashing:nth-of-type(3) {
  border-bottom: 3px dashed #fff;
  width: 200%;
  -webkit-transform: translateX(0%);
  -moz-transform: translateX(0%);
  -ms-transform: translateX(0%);
  -o-transform: translateX(0%);
  transform: translateX(0%);
  position: absolute;
  bottom: 0;
  left: 0; }

.dashing:nth-of-type(4) {
  border-left: 3px dashed #fff;
  height: 200%;
  -webkit-transform: translateY(0%);
  -moz-transform: translateY(0%);
  -ms-transform: translateY(0%);
  -o-transform: translateY(0%);
  transform: translateY(0%);
  position: absolute;
  top: 0;
  left: 0; }

.logoWrap {
  width: 100px;
  height: 98px;
  padding: 3px 0;
  margin: 2.625rem auto;
  position: relative;
  overflow: hidden;
  display: block; }
  @media (min-width: 1152px) {
    .logoWrap {
      width: 113px;
      height: 111px; } }
  @media (min-width: 1280px) {
    .logoWrap {
      width: 125px;
      height: 123px; } }
  @media (min-width: 1366px) {
    .logoWrap {
      width: 134px;
      height: 131px; } }
  @media (min-width: 1400px) {
    .logoWrap {
      width: 137px;
      height: 134px; } }
  @media (min-width: 1440px) {
    .logoWrap {
      width: 141px;
      height: 138px; } }
  @media (min-width: 1536px) {
    .logoWrap {
      width: 151px;
      height: 147px; } }
  @media (min-width: 1600px) {
    .logoWrap {
      width: 157px;
      height: 154px; } }
  @media (min-width: 1680px) {
    .logoWrap {
      width: 165px;
      height: 161px; } }
  @media (min-width: 1980px) {
    .logoWrap {
      width: 194px;
      height: 190px; } }
  @media (min-width: 2000px) {
    .logoWrap {
      width: 196px;
      height: 192px; } }
  .logoWrap:hover .dashing:nth-of-type(1) {
    -webkit-transform: translateX(50%);
    -moz-transform: translateX(50%);
    -ms-transform: translateX(50%);
    -o-transform: translateX(50%);
    transform: translateX(50%); }
  .logoWrap:hover .dashing:nth-of-type(2) {
    -webkit-transform: translateY(50%);
    -moz-transform: translateY(50%);
    -ms-transform: translateY(50%);
    -o-transform: translateY(50%);
    transform: translateY(50%); }
  .logoWrap:hover .dashing:nth-of-type(3) {
    -webkit-transform: translateX(-50%);
    -moz-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    -o-transform: translateX(-50%);
    transform: translateX(-50%); }
  .logoWrap:hover .dashing:nth-of-type(4) {
    -webkit-transform: translateY(-50%);
    -moz-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    -o-transform: translateY(-50%);
    transform: translateY(-50%); }
  .logoWrap .logo {
    background-image: url(../../../img/1024/sprites.png);
    background-position: -100px -492px;
    width: 96px;
    height: 94px;
    margin: 0 auto; }
    @media (min-width: 1152px) {
      .logoWrap .logo {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -113px -553px;
        width: 108px;
        height: 106px; } }
    @media (min-width: 1280px) {
      .logoWrap .logo {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -125px -614px;
        width: 120px;
        height: 118px; } }
    @media (min-width: 1366px) {
      .logoWrap .logo {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -134px -656px;
        width: 128px;
        height: 126px; } }
    @media (min-width: 1400px) {
      .logoWrap .logo {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -137px -672px;
        width: 132px;
        height: 129px; } }
    @media (min-width: 1440px) {
      .logoWrap .logo {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -141px -691px;
        width: 135px;
        height: 132px; } }
    @media (min-width: 1536px) {
      .logoWrap .logo {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -151px -737px;
        width: 144px;
        height: 141px; } }
    @media (min-width: 1600px) {
      .logoWrap .logo {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -157px -768px;
        width: 150px;
        height: 147px; } }
    @media (min-width: 1680px) {
      .logoWrap .logo {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -165px -806px;
        width: 158px;
        height: 155px; } }
    @media (min-width: 1980px) {
      .logoWrap .logo {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -194px -950px;
        width: 186px;
        height: 182px; } }
    @media (min-width: 2000px) {
      .logoWrap .logo {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -196px -960px;
        width: 188px;
        height: 184px; } }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
#fun {
  overflow: hidden; }
  #fun .apple-1 {
    position: absolute;
    right: 6.0625rem;
    bottom: 3.3125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: 0px -590px;
    width: 93px;
    height: 53px; }
    @media (min-width: 1152px) {
      #fun .apple-1 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -86px -664px;
        width: 104px;
        height: 59px; } }
    @media (min-width: 1280px) {
      #fun .apple-1 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -95px -737px;
        width: 116px;
        height: 66px; } }
    @media (min-width: 1366px) {
      #fun .apple-1 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -102px -787px;
        width: 124px;
        height: 70px; } }
    @media (min-width: 1400px) {
      #fun .apple-1 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -104px -806px;
        width: 127px;
        height: 72px; } }
    @media (min-width: 1440px) {
      #fun .apple-1 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -107px -829px;
        width: 130px;
        height: 74px; } }
    @media (min-width: 1536px) {
      #fun .apple-1 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -114px -884px;
        width: 139px;
        height: 79px; } }
    @media (min-width: 1600px) {
      #fun .apple-1 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -119px -922px;
        width: 145px;
        height: 82px; } }
    @media (min-width: 1680px) {
      #fun .apple-1 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: 0px -967px;
        width: 152px;
        height: 87px; } }
    @media (min-width: 1980px) {
      #fun .apple-1 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -148px -1140px;
        width: 179px;
        height: 102px; } }
    @media (min-width: 2000px) {
      #fun .apple-1 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -149px -1152px;
        width: 181px;
        height: 103px; } }
  #fun .apple-2 {
    position: absolute;
    top: 2.125rem;
    left: 31rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -75px -643px;
    width: 68px;
    height: 39px; }
    @media (min-width: 1152px) {
      #fun .apple-2 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -784px -145px;
        width: 77px;
        height: 44px; } }
    @media (min-width: 1280px) {
      #fun .apple-2 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -93px -803px;
        width: 85px;
        height: 49px; } }
    @media (min-width: 1366px) {
      #fun .apple-2 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -100px -857px;
        width: 91px;
        height: 53px; } }
    @media (min-width: 1400px) {
      #fun .apple-2 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -952px -177px;
        width: 93px;
        height: 54px; } }
    @media (min-width: 1440px) {
      #fun .apple-2 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -105px -903px;
        width: 96px;
        height: 55px; } }
    @media (min-width: 1536px) {
      #fun .apple-2 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -1043px -194px;
        width: 102px;
        height: 59px; } }
    @media (min-width: 1600px) {
      #fun .apple-2 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -117px -1004px;
        width: 106px;
        height: 62px; } }
    @media (min-width: 1680px) {
      #fun .apple-2 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -123px -1054px;
        width: 112px;
        height: 65px; } }
    @media (min-width: 1980px) {
      #fun .apple-2 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -145px -1242px;
        width: 132px;
        height: 76px; } }
    @media (min-width: 2000px) {
      #fun .apple-2 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -146px -1255px;
        width: 133px;
        height: 77px; } }
  #fun .apple-3 {
    position: absolute;
    top: 14.6875rem;
    left: 4.5625rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: 0px -643px;
    width: 75px;
    height: 41px;
    z-index: 1; }
    @media (min-width: 1152px) {
      #fun .apple-3 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -728px -99px;
        width: 84px;
        height: 46px; } }
    @media (min-width: 1280px) {
      #fun .apple-3 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: 0px -803px;
        width: 93px;
        height: 51px; } }
    @media (min-width: 1366px) {
      #fun .apple-3 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: 0px -857px;
        width: 100px;
        height: 55px; } }
    @media (min-width: 1400px) {
      #fun .apple-3 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -884px -121px;
        width: 102px;
        height: 56px; } }
    @media (min-width: 1440px) {
      #fun .apple-3 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: 0px -903px;
        width: 105px;
        height: 58px; } }
    @media (min-width: 1536px) {
      #fun .apple-3 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -969px -133px;
        width: 112px;
        height: 61px; } }
    @media (min-width: 1600px) {
      #fun .apple-3 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: 0px -1004px;
        width: 117px;
        height: 64px; } }
    @media (min-width: 1680px) {
      #fun .apple-3 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: 0px -1054px;
        width: 123px;
        height: 67px; } }
    @media (min-width: 1980px) {
      #fun .apple-3 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: 0px -1242px;
        width: 145px;
        height: 79px; } }
    @media (min-width: 2000px) {
      #fun .apple-3 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: 0px -1255px;
        width: 146px;
        height: 80px; } }
  #fun .bottle {
    position: absolute;
    bottom: 10.3125rem;
    left: 25.1875rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -549px -350px;
    width: 83px;
    height: 95px; }
    @media (min-width: 1152px) {
      #fun .bottle {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -616px -395px;
        width: 94px;
        height: 107px; } }
    @media (min-width: 1280px) {
      #fun .bottle {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -685px -438px;
        width: 104px;
        height: 119px; } }
    @media (min-width: 1366px) {
      #fun .bottle {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -731px -467px;
        width: 111px;
        height: 127px; } }
    @media (min-width: 1400px) {
      #fun .bottle {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -748px -479px;
        width: 114px;
        height: 130px; } }
    @media (min-width: 1440px) {
      #fun .bottle {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -771px -492px;
        width: 117px;
        height: 134px; } }
    @media (min-width: 1536px) {
      #fun .bottle {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -821px -525px;
        width: 125px;
        height: 143px; } }
    @media (min-width: 1600px) {
      #fun .bottle {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -857px -548px;
        width: 130px;
        height: 149px; } }
    @media (min-width: 1680px) {
      #fun .bottle {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -898px -575px;
        width: 137px;
        height: 156px; } }
    @media (min-width: 1980px) {
      #fun .bottle {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -1060px -678px;
        width: 161px;
        height: 184px; } }
    @media (min-width: 2000px) {
      #fun .bottle {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -1070px -684px;
        width: 163px;
        height: 186px; } }
  #fun .bigTitle {
    position: absolute;
    top: 19.375rem;
    left: 12.9375rem;
    font-family: NFLVikings;
    font-size: 5.4375rem;
    font-weight: normal;
    color: #fff;
    line-height: 96%;
    text-transform: uppercase;
    margin: 0;
    cursor: default; }
  #fun .is {
    position: absolute;
    top: 24.1875rem;
    left: -15.625rem; }
  #fun .is:focus + .isWrap i {
    visibility: visible; }
  #fun .isWrap {
    position: absolute;
    top: 24.1875rem;
    left: 12.9375rem;
    height: 3.4375rem;
    width: 21.875rem;
    border: none;
    outline: none;
    background: none;
    color: #fff;
    font-weight: normal;
    font-size: 2.75rem;
    text-transform: uppercase; }
    #fun .isWrap span {
      display: inline-block;
      vertical-align: middle; }
    #fun .isWrap i {
      -webkit-animation: 1s blink step-end infinite;
      -moz-animation: 1s blink step-end infinite;
      animation: 1s blink step-end infinite;
      height: 100%;
      width: 0.375rem;
      margin: 0 0 0 0.125rem;
      display: inline-block;
      vertical-align: middle;
      visibility: hidden; }
  #fun .ok {
    position: absolute;
    bottom: 13.6875rem;
    left: 12.875rem;
    height: 3.1875rem;
    width: 7.0625rem;
    padding: 0.6875rem 0;
    font-size: 2.375rem;
    font-family: NFLVikings;
    text-align: center;
    text-decoration: none;
    overflow: hidden;
    cursor: pointer;
    color: #fff; }
    #fun .ok:hover .dashing:nth-of-type(1) {
      -webkit-transform: translateX(50%);
      -moz-transform: translateX(50%);
      -ms-transform: translateX(50%);
      -o-transform: translateX(50%);
      transform: translateX(50%); }
    #fun .ok:hover .dashing:nth-of-type(2) {
      -webkit-transform: translateY(50%);
      -moz-transform: translateY(50%);
      -ms-transform: translateY(50%);
      -o-transform: translateY(50%);
      transform: translateY(50%); }
    #fun .ok:hover .dashing:nth-of-type(3) {
      -webkit-transform: translateX(-50%);
      -moz-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
      -o-transform: translateX(-50%);
      transform: translateX(-50%); }
    #fun .ok:hover .dashing:nth-of-type(4) {
      -webkit-transform: translateY(-50%);
      -moz-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      -o-transform: translateY(-50%);
      transform: translateY(-50%); }
  #fun .imgWrap {
    position: absolute;
    top: -3.9375rem;
    left: 22.625rem;
    z-index: 2; }
    #fun .imgWrap img {
      width: 56.0625rem; }
  #fun .leftChars {
    position: absolute;
    right: 17.3125rem;
    bottom: 15.4375rem;
    z-index: 3;
    height: 2.5rem;
    width: 5.5625rem;
    padding: 0.5rem 0 0;
    cursor: default;
    overflow: hidden;
    text-align: center;
    color: #fff;
    font-family: NFLVikings;
    font-size: 1.875rem; }
    #fun .leftChars .dashing:nth-of-type(1) {
      border-top: 2px dashed #fff; }
    #fun .leftChars .dashing:nth-of-type(2) {
      border-right: 2px dashed #fff; }
    #fun .leftChars .dashing:nth-of-type(3) {
      border-bottom: 2px dashed #fff; }
    #fun .leftChars .dashing:nth-of-type(4) {
      border-left: 2px dashed #fff; }

@-webkit-keyframes blink {
  from, to {
    background: transparent; }
  50% {
    background: #fff; } }
@-moz-keyframes blink {
  from, to {
    background: transparent; }
  50% {
    background: #fff; } }
@keyframes blink {
  from, to {
    background: transparent; }
  50% {
    background: #fff; } }
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
#intro {
  overflow: hidden; }
  #intro .apple-1 {
    position: absolute;
    top: 7.75rem;
    right: 11.5rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -260px -492px;
    width: 67px;
    height: 76px; }
    @media (min-width: 1152px) {
      #intro .apple-1 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -293px -553px;
        width: 75px;
        height: 85px; } }
    @media (min-width: 1280px) {
      #intro .apple-1 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -325px -614px;
        width: 83px;
        height: 95px; } }
    @media (min-width: 1366px) {
      #intro .apple-1 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -347px -656px;
        width: 89px;
        height: 101px; } }
    @media (min-width: 1400px) {
      #intro .apple-1 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -357px -672px;
        width: 91px;
        height: 104px; } }
    @media (min-width: 1440px) {
      #intro .apple-1 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -366px -691px;
        width: 94px;
        height: 107px; } }
    @media (min-width: 1536px) {
      #intro .apple-1 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -391px -737px;
        width: 100px;
        height: 114px; } }
    @media (min-width: 1600px) {
      #intro .apple-1 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -407px -768px;
        width: 104px;
        height: 118px; } }
    @media (min-width: 1680px) {
      #intro .apple-1 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -428px -806px;
        width: 109px;
        height: 124px; } }
    @media (min-width: 1980px) {
      #intro .apple-1 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -504px -950px;
        width: 129px;
        height: 147px; } }
    @media (min-width: 2000px) {
      #intro .apple-1 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -509px -960px;
        width: 130px;
        height: 148px; } }
  #intro .apple-2 {
    position: absolute;
    bottom: 5.375rem;
    left: 0.375rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -435px -492px;
    width: 58px;
    height: 68px; }
    @media (min-width: 1152px) {
      #intro .apple-2 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -489px -553px;
        width: 65px;
        height: 76px; } }
    @media (min-width: 1280px) {
      #intro .apple-2 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -542px -614px;
        width: 72px;
        height: 84px; } }
    @media (min-width: 1366px) {
      #intro .apple-2 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -579px -656px;
        width: 77px;
        height: 90px; } }
    @media (min-width: 1400px) {
      #intro .apple-2 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -595px -672px;
        width: 79px;
        height: 92px; } }
    @media (min-width: 1440px) {
      #intro .apple-2 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -611px -691px;
        width: 81px;
        height: 95px; } }
    @media (min-width: 1536px) {
      #intro .apple-2 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -652px -737px;
        width: 87px;
        height: 101px; } }
    @media (min-width: 1600px) {
      #intro .apple-2 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -679px -768px;
        width: 90px;
        height: 106px; } }
    @media (min-width: 1680px) {
      #intro .apple-2 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -713px -806px;
        width: 95px;
        height: 111px; } }
    @media (min-width: 1980px) {
      #intro .apple-2 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -841px -950px;
        width: 112px;
        height: 131px; } }
    @media (min-width: 2000px) {
      #intro .apple-2 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -849px -960px;
        width: 113px;
        height: 132px; } }
  #intro .apple-3 {
    position: absolute;
    right: -0.125rem;
    bottom: 3.125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -196px -492px;
    width: 64px;
    height: 84px;
    z-index: 1; }
    @media (min-width: 1152px) {
      #intro .apple-3 {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -221px -553px;
        width: 72px;
        height: 94px; } }
    @media (min-width: 1280px) {
      #intro .apple-3 {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -245px -614px;
        width: 80px;
        height: 105px; } }
    @media (min-width: 1366px) {
      #intro .apple-3 {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -262px -656px;
        width: 85px;
        height: 112px; } }
    @media (min-width: 1400px) {
      #intro .apple-3 {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -269px -672px;
        width: 88px;
        height: 115px; } }
    @media (min-width: 1440px) {
      #intro .apple-3 {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -276px -691px;
        width: 90px;
        height: 118px; } }
    @media (min-width: 1536px) {
      #intro .apple-3 {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -295px -737px;
        width: 96px;
        height: 126px; } }
    @media (min-width: 1600px) {
      #intro .apple-3 {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -307px -768px;
        width: 100px;
        height: 131px; } }
    @media (min-width: 1680px) {
      #intro .apple-3 {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -323px -806px;
        width: 105px;
        height: 138px; } }
    @media (min-width: 1980px) {
      #intro .apple-3 {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -380px -950px;
        width: 124px;
        height: 162px; } }
    @media (min-width: 2000px) {
      #intro .apple-3 {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -384px -960px;
        width: 125px;
        height: 164px; } }
  #intro .bottle {
    position: absolute;
    bottom: 10.375rem;
    left: 18.4375rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: -327px -492px;
    width: 108px;
    height: 71px; }
    @media (min-width: 1152px) {
      #intro .bottle {
        background-image: url(../../../img/1152/sprites.png);
        background-position: -368px -553px;
        width: 121px;
        height: 79px; } }
    @media (min-width: 1280px) {
      #intro .bottle {
        background-image: url(../../../img/1280/sprites.png);
        background-position: -408px -614px;
        width: 134px;
        height: 88px; } }
    @media (min-width: 1366px) {
      #intro .bottle {
        background-image: url(../../../img/1366/sprites.png);
        background-position: -436px -656px;
        width: 143px;
        height: 94px; } }
    @media (min-width: 1400px) {
      #intro .bottle {
        background-image: url(../../../img/1400/sprites.png);
        background-position: -448px -672px;
        width: 147px;
        height: 97px; } }
    @media (min-width: 1440px) {
      #intro .bottle {
        background-image: url(../../../img/1440/sprites.png);
        background-position: -460px -691px;
        width: 151px;
        height: 99px; } }
    @media (min-width: 1536px) {
      #intro .bottle {
        background-image: url(../../../img/1536/sprites.png);
        background-position: -491px -737px;
        width: 161px;
        height: 106px; } }
    @media (min-width: 1600px) {
      #intro .bottle {
        background-image: url(../../../img/1600/sprites.png);
        background-position: -511px -768px;
        width: 168px;
        height: 110px; } }
    @media (min-width: 1680px) {
      #intro .bottle {
        background-image: url(../../../img/1680/sprites.png);
        background-position: -537px -806px;
        width: 176px;
        height: 116px; } }
    @media (min-width: 1980px) {
      #intro .bottle {
        background-image: url(../../../img/1980/sprites.png);
        background-position: -633px -950px;
        width: 208px;
        height: 137px; } }
    @media (min-width: 2000px) {
      #intro .bottle {
        background-image: url(../../../img/2000/sprites.png);
        background-position: -639px -960px;
        width: 210px;
        height: 138px; } }
  #intro .dude {
    position: absolute;
    right: 19.9375rem;
    bottom: 1.125rem;
    background-image: url(../../../img/1024/sprites.png);
    background-position: 0px 0px;
    width: 370px;
    height: 492px; }
    @media (min-width: 1152px) {
      #intro .dude {
        background-image: url(../../../img/1152/sprites.png);
        background-position: 0px 0px;
        width: 416px;
        height: 553px; } }
    @media (min-width: 1280px) {
      #intro .dude {
        background-image: url(../../../img/1280/sprites.png);
        background-position: 0px 0px;
        width: 462px;
        height: 614px; } }
    @media (min-width: 1366px) {
      #intro .dude {
        background-image: url(../../../img/1366/sprites.png);
        background-position: 0px 0px;
        width: 493px;
        height: 656px; } }
    @media (min-width: 1400px) {
      #intro .dude {
        background-image: url(../../../img/1400/sprites.png);
        background-position: 0px 0px;
        width: 505px;
        height: 672px; } }
    @media (min-width: 1440px) {
      #intro .dude {
        background-image: url(../../../img/1440/sprites.png);
        background-position: 0px 0px;
        width: 520px;
        height: 691px; } }
    @media (min-width: 1536px) {
      #intro .dude {
        background-image: url(../../../img/1536/sprites.png);
        background-position: 0px 0px;
        width: 554px;
        height: 737px; } }
    @media (min-width: 1600px) {
      #intro .dude {
        background-image: url(../../../img/1600/sprites.png);
        background-position: 0px 0px;
        width: 578px;
        height: 768px; } }
    @media (min-width: 1680px) {
      #intro .dude {
        background-image: url(../../../img/1680/sprites.png);
        background-position: 0px 0px;
        width: 606px;
        height: 806px; } }
    @media (min-width: 1980px) {
      #intro .dude {
        background-image: url(../../../img/1980/sprites.png);
        background-position: 0px 0px;
        width: 715px;
        height: 950px; } }
    @media (min-width: 2000px) {
      #intro .dude {
        background-image: url(../../../img/2000/sprites.png);
        background-position: 0px 0px;
        width: 722px;
        height: 960px; } }
  #intro .logoWrap {
    position: absolute;
    right: 16.125rem;
    bottom: 16.9375rem;
    margin: 0; }
  #intro .titleWrap {
    position: absolute;
    top: 18.3125rem;
    left: 12.1875rem;
    cursor: default; }
    #intro .titleWrap:hover .title {
      opacity: 0.3; }
    #intro .titleWrap:hover .bigTitle span {
      opacity: 0.3; }
    #intro .titleWrap:hover .bigTitle .highlight {
      opacity: 1; }
  #intro .bigTitle {
    position: absolute;
    top: 0;
    left: 0;
    font-family: NFLVikings;
    font-size: 6.25rem;
    font-weight: normal;
    color: #fff;
    line-height: 96%;
    text-transform: uppercase;
    margin: 0; }
    #intro .bigTitle span {
      -webkit-transition: opacity 0.3s ease-in-out;
      -moz-transition: opacity 0.3s ease-in-out;
      transition: opacity 0.3s ease-in-out; }
  #intro .title {
    position: absolute;
    top: -0.25rem;
    left: 10.6875rem;
    -webkit-transition: opacity 0.3s ease-in-out;
    -moz-transition: opacity 0.3s ease-in-out;
    transition: opacity 0.3s ease-in-out;
    color: #fff;
    text-transform: uppercase;
    font-size: 1.9375rem;
    line-height: 99%;
    width: 18.75rem; }
  #intro .go {
    position: absolute;
    top: 7.5rem;
    left: 23.875rem;
    height: 3.3125rem;
    width: 7.3125rem;
    padding: 0.625rem 0;
    font-size: 2.5625rem;
    font-family: NFLVikings;
    text-align: center;
    text-decoration: none;
    overflow: hidden;
    cursor: pointer;
    color: #fff; }
    #intro .go:hover .dashing:nth-of-type(1) {
      -webkit-transform: translateX(50%);
      -moz-transform: translateX(50%);
      -ms-transform: translateX(50%);
      -o-transform: translateX(50%);
      transform: translateX(50%); }
    #intro .go:hover .dashing:nth-of-type(2) {
      -webkit-transform: translateY(50%);
      -moz-transform: translateY(50%);
      -ms-transform: translateY(50%);
      -o-transform: translateY(50%);
      transform: translateY(50%); }
    #intro .go:hover .dashing:nth-of-type(3) {
      -webkit-transform: translateX(-50%);
      -moz-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
      -o-transform: translateX(-50%);
      transform: translateX(-50%); }
    #intro .go:hover .dashing:nth-of-type(4) {
      -webkit-transform: translateY(-50%);
      -moz-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      -o-transform: translateY(-50%);
      transform: translateY(-50%); }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
#products .productsWrap {
  position: relative;
  padding: 17.875rem 0 2.25rem;
  margin: 0 auto;
  width: 25.625rem;
  left: 11.5rem; }
  #products .productsWrap:before {
    position: absolute;
    top: 2.0625rem;
    left: -19.6875rem;
    height: 43.75rem;
    width: 37.5rem;
    content: '';
    background-repeat: no-repeat;
    background-image: url("/img-dist//1024/productsBg.png"); }
    @media (min-width: 1024px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1024/productsBg.png"); } }
    @media (min-width: 1152px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1152/productsBg.png"); } }
    @media (min-width: 1280px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1280/productsBg.png"); } }
    @media (min-width: 1366px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1366/productsBg.png"); } }
    @media (min-width: 1400px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1400/productsBg.png"); } }
    @media (min-width: 1440px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1440/productsBg.png"); } }
    @media (min-width: 1536px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1536/productsBg.png"); } }
    @media (min-width: 1600px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1600/productsBg.png"); } }
    @media (min-width: 1680px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1680/productsBg.png"); } }
    @media (min-width: 1980px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//1980/productsBg.png"); } }
    @media (min-width: 2000px) {
      #products .productsWrap:before {
        background-image: url("/img-dist//2000/productsBg.png"); } }
  #products .productsWrap a {
    position: relative;
    display: block;
    color: #fff;
    text-decoration: none;
    text-transform: uppercase; }
    #products .productsWrap a.prod-1 {
      margin-left: 8.9375rem; }
      #products .productsWrap a.prod-1:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -443px -121px;
        width: 134px;
        height: 113px;
        position: absolute;
        top: -3.75rem;
        left: -9.4375rem;
        content: ''; }
        @media (min-width: 1152px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -498px -137px;
            width: 150px;
            height: 127px; } }
        @media (min-width: 1280px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -554px -152px;
            width: 167px;
            height: 141px; } }
        @media (min-width: 1366px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -591px -162px;
            width: 178px;
            height: 150px; } }
        @media (min-width: 1400px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -605px -166px;
            width: 183px;
            height: 154px; } }
        @media (min-width: 1440px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -623px -171px;
            width: 188px;
            height: 158px; } }
        @media (min-width: 1536px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -664px -182px;
            width: 200px;
            height: 169px; } }
        @media (min-width: 1600px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -692px -190px;
            width: 209px;
            height: 176px; } }
        @media (min-width: 1680px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -726px -199px;
            width: 219px;
            height: 185px; } }
        @media (min-width: 1980px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -857px -235px;
            width: 258px;
            height: 218px; } }
        @media (min-width: 2000px) {
          #products .productsWrap a.prod-1:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -865px -237px;
            width: 261px;
            height: 220px; } }
    #products .productsWrap a.prod-2 {
      margin: 3.1875rem 0 0 17.75rem; }
      #products .productsWrap a.prod-2:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -579px -237px;
        width: 60px;
        height: 100px;
        position: absolute;
        top: -3rem;
        left: -6.375rem;
        content: ''; }
        @media (min-width: 1152px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -651px -268px;
            width: 67px;
            height: 113px; } }
        @media (min-width: 1280px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -723px -297px;
            width: 75px;
            height: 125px; } }
        @media (min-width: 1366px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -772px -317px;
            width: 80px;
            height: 134px; } }
        @media (min-width: 1400px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -791px -325px;
            width: 82px;
            height: 137px; } }
        @media (min-width: 1440px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -814px -334px;
            width: 84px;
            height: 141px; } }
        @media (min-width: 1536px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -867px -356px;
            width: 90px;
            height: 151px; } }
        @media (min-width: 1600px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -904px -372px;
            width: 94px;
            height: 157px; } }
        @media (min-width: 1680px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -949px -390px;
            width: 98px;
            height: 165px; } }
        @media (min-width: 1980px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -1119px -460px;
            width: 116px;
            height: 194px; } }
        @media (min-width: 2000px) {
          #products .productsWrap a.prod-2:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -1130px -464px;
            width: 117px;
            height: 196px; } }
    #products .productsWrap a.prod-3 {
      margin: 1.875rem 0 0 8.3125rem; }
      #products .productsWrap a.prod-3:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -479px -350px;
        width: 70px;
        height: 105px;
        position: absolute;
        top: -2.5rem;
        left: -6.5rem;
        content: ''; }
        @media (min-width: 1152px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -538px -395px;
            width: 78px;
            height: 118px; } }
        @media (min-width: 1280px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -598px -438px;
            width: 87px;
            height: 131px; } }
        @media (min-width: 1366px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -638px -467px;
            width: 93px;
            height: 140px; } }
        @media (min-width: 1400px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -653px -479px;
            width: 95px;
            height: 144px; } }
        @media (min-width: 1440px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -673px -492px;
            width: 98px;
            height: 148px; } }
        @media (min-width: 1536px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -717px -525px;
            width: 104px;
            height: 157px; } }
        @media (min-width: 1600px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -748px -548px;
            width: 109px;
            height: 164px; } }
        @media (min-width: 1680px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -784px -575px;
            width: 114px;
            height: 172px; } }
        @media (min-width: 1980px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -925px -678px;
            width: 135px;
            height: 203px; } }
        @media (min-width: 2000px) {
          #products .productsWrap a.prod-3:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -934px -684px;
            width: 136px;
            height: 205px; } }
    #products .productsWrap a.prod-4 {
      margin: 4.625rem 0 0 15.625rem; }
      #products .productsWrap a.prod-4:before {
        background-image: url(../../../img/1024/sprites.png);
        background-position: -370px -350px;
        width: 109px;
        height: 110px;
        position: absolute;
        top: -4.75rem;
        left: -8.3125rem;
        content: ''; }
        @media (min-width: 1152px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1152/sprites.png);
            background-position: -416px -395px;
            width: 122px;
            height: 124px; } }
        @media (min-width: 1280px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1280/sprites.png);
            background-position: -462px -438px;
            width: 136px;
            height: 138px; } }
        @media (min-width: 1366px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1366/sprites.png);
            background-position: -493px -467px;
            width: 145px;
            height: 147px; } }
        @media (min-width: 1400px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1400/sprites.png);
            background-position: -505px -479px;
            width: 148px;
            height: 151px; } }
        @media (min-width: 1440px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1440/sprites.png);
            background-position: -520px -492px;
            width: 153px;
            height: 155px; } }
        @media (min-width: 1536px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1536/sprites.png);
            background-position: -554px -525px;
            width: 163px;
            height: 165px; } }
        @media (min-width: 1600px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1600/sprites.png);
            background-position: -578px -548px;
            width: 170px;
            height: 172px; } }
        @media (min-width: 1680px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1680/sprites.png);
            background-position: -606px -575px;
            width: 178px;
            height: 181px; } }
        @media (min-width: 1980px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/1980/sprites.png);
            background-position: -715px -678px;
            width: 210px;
            height: 213px; } }
        @media (min-width: 2000px) {
          #products .productsWrap a.prod-4:before {
            background-image: url(../../../img/2000/sprites.png);
            background-position: -722px -684px;
            width: 212px;
            height: 215px; } }
    #products .productsWrap a .name {
      font-family: NFLVikings;
      font-size: 1.25rem;
      line-height: 125%; }
  #products .productsWrap .label {
    display: block;
    font-size: 0.75rem; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
.productWrap {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  background: url("/img-dist/productBg.jpg"); }
  .productWrap:before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: '';
    background: #000;
    opacity: 0.3; }
  .productWrap .prodContent {
    width: 310px;
    z-index: 10; }
    .productWrap .prodContent .close {
      position: absolute;
      top: -1.1875rem;
      right: -2.4375rem;
      background-image: url(../../../img/1024/sprites.png);
      background-position: -647px -249px;
      width: 32px;
      height: 31px;
      cursor: pointer; }
      @media (min-width: 1152px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1152/sprites.png);
          background-position: -728px -190px;
          width: 36px;
          height: 35px; } }
      @media (min-width: 1280px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1280/sprites.png);
          background-position: -808px -311px;
          width: 40px;
          height: 39px; } }
      @media (min-width: 1366px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1366/sprites.png);
          background-position: -863px -331px;
          width: 42px;
          height: 42px; } }
      @media (min-width: 1400px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1400/sprites.png);
          background-position: -884px -232px;
          width: 43px;
          height: 43px; } }
      @media (min-width: 1440px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1440/sprites.png);
          background-position: -910px -348px;
          width: 45px;
          height: 44px; } }
      @media (min-width: 1536px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1536/sprites.png);
          background-position: -969px -254px;
          width: 48px;
          height: 47px; } }
      @media (min-width: 1600px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1600/sprites.png);
          background-position: -1011px -387px;
          width: 50px;
          height: 49px; } }
      @media (min-width: 1680px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1680/sprites.png);
          background-position: -1060px -410px;
          width: 52px;
          height: 51px; } }
      @media (min-width: 1980px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/1980/sprites.png);
          background-position: -1251px -480px;
          width: 61px;
          height: 60px; } }
      @media (min-width: 2000px) {
        .productWrap .prodContent .close {
          background-image: url(../../../img/2000/sprites.png);
          background-position: -1263px -486px;
          width: 62px;
          height: 61px; } }
  .productWrap .title {
    color: #fff; }
    .productWrap .title .label {
      font-family: NFLVikings;
      font-size: 3.4375rem;
      line-height: 118%; }
    .productWrap .title .name {
      display: block;
      font-size: 1.8125rem;
      text-transform: uppercase; }
  .productWrap .description {
    color: #fff;
    margin: 2rem 0 0;
    font-size: 1rem;
    line-height: 145%;
    text-transform: uppercase;
    letter-spacing: 1px; }
    .productWrap .description span {
      white-space: nowrap; }

.classic-can .prodContent {
  position: absolute;
  top: 15.625rem;
  right: 6.25rem; }
.classic-can:after {
  height: 56.25rem;
  width: 93.75rem;
  position: absolute;
  bottom: -20.5rem;
  left: -23.6875rem;
  content: '';
  display: block;
  background-repeat: no-repeat;
  background-image: url("/img-dist/1024/classic-can.png"); }
  @media (min-width: 1024px) {
    .classic-can:after {
      background-image: url("/img-dist/1024/classic-can.png"); } }
  @media (min-width: 1152px) {
    .classic-can:after {
      background-image: url("/img-dist/1152/classic-can.png"); } }
  @media (min-width: 1280px) {
    .classic-can:after {
      background-image: url("/img-dist/1280/classic-can.png"); } }
  @media (min-width: 1366px) {
    .classic-can:after {
      background-image: url("/img-dist/1366/classic-can.png"); } }
  @media (min-width: 1400px) {
    .classic-can:after {
      background-image: url("/img-dist/1400/classic-can.png"); } }
  @media (min-width: 1440px) {
    .classic-can:after {
      background-image: url("/img-dist/1440/classic-can.png"); } }
  @media (min-width: 1536px) {
    .classic-can:after {
      background-image: url("/img-dist/1536/classic-can.png"); } }
  @media (min-width: 1600px) {
    .classic-can:after {
      background-image: url("/img-dist/1600/classic-can.png"); } }
  @media (min-width: 1680px) {
    .classic-can:after {
      background-image: url("/img-dist/1680/classic-can.png"); } }
  @media (min-width: 1980px) {
    .classic-can:after {
      background-image: url("/img-dist/1980/classic-can.png"); } }
  @media (min-width: 2000px) {
    .classic-can:after {
      background-image: url("/img-dist/2000/classic-can.png"); } }
.classic-can .close {
  position: absolute;
  top: -5.625rem;
  right: -10.625rem; }

.buzina-can .prodContent {
  position: absolute;
  top: 15.375rem;
  left: 16.1875rem; }
  .buzina-can .prodContent .close {
    top: -1rem;
    right: -2.8125rem; }
.buzina-can:after {
  content: '';
  display: block;
  background-repeat: no-repeat;
  height: 50rem;
  width: 68.75rem;
  position: absolute;
  top: -5.6875rem;
  right: -23rem;
  -webkit-transform: rotate(-12deg);
  -moz-transform: rotate(-12deg);
  -ms-transform: rotate(-12deg);
  -o-transform: rotate(-12deg);
  transform: rotate(-12deg);
  background-image: url("/img-dist/1024/buzina-can.png");
  z-index: 2; }
  @media (min-width: 1024px) {
    .buzina-can:after {
      background-image: url("/img-dist/1024/buzina-can.png"); } }
  @media (min-width: 1152px) {
    .buzina-can:after {
      background-image: url("/img-dist/1152/buzina-can.png"); } }
  @media (min-width: 1280px) {
    .buzina-can:after {
      background-image: url("/img-dist/1280/buzina-can.png"); } }
  @media (min-width: 1366px) {
    .buzina-can:after {
      background-image: url("/img-dist/1366/buzina-can.png"); } }
  @media (min-width: 1400px) {
    .buzina-can:after {
      background-image: url("/img-dist/1400/buzina-can.png"); } }
  @media (min-width: 1440px) {
    .buzina-can:after {
      background-image: url("/img-dist/1440/buzina-can.png"); } }
  @media (min-width: 1536px) {
    .buzina-can:after {
      background-image: url("/img-dist/1536/buzina-can.png"); } }
  @media (min-width: 1600px) {
    .buzina-can:after {
      background-image: url("/img-dist/1600/buzina-can.png"); } }
  @media (min-width: 1680px) {
    .buzina-can:after {
      background-image: url("/img-dist/1680/buzina-can.png"); } }
  @media (min-width: 1980px) {
    .buzina-can:after {
      background-image: url("/img-dist/1980/buzina-can.png"); } }
  @media (min-width: 2000px) {
    .buzina-can:after {
      background-image: url("/img-dist/2000/buzina-can.png"); } }

.classic-bottle .prodContent {
  position: absolute;
  top: 15.5rem;
  right: 18.1875rem; }
  .classic-bottle .prodContent .close {
    top: -1.1875rem;
    right: -2.8125rem; }
.classic-bottle:after {
  content: '';
  display: block;
  background-repeat: no-repeat;
  height: 34.375rem;
  width: 46.875rem;
  position: absolute;
  top: 8.9375rem;
  left: 4.125rem;
  z-index: 2;
  -webkit-transform: rotate(20deg);
  -moz-transform: rotate(20deg);
  -ms-transform: rotate(20deg);
  -o-transform: rotate(20deg);
  transform: rotate(20deg);
  background-image: url("/img-dist/1024/classic-bottle.png"); }
  @media (min-width: 1024px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1024/classic-bottle.png"); } }
  @media (min-width: 1152px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1152/classic-bottle.png"); } }
  @media (min-width: 1280px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1280/classic-bottle.png"); } }
  @media (min-width: 1366px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1366/classic-bottle.png"); } }
  @media (min-width: 1400px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1400/classic-bottle.png"); } }
  @media (min-width: 1440px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1440/classic-bottle.png"); } }
  @media (min-width: 1536px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1536/classic-bottle.png"); } }
  @media (min-width: 1600px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1600/classic-bottle.png"); } }
  @media (min-width: 1680px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1680/classic-bottle.png"); } }
  @media (min-width: 1980px) {
    .classic-bottle:after {
      background-image: url("/img-dist/1980/classic-bottle.png"); } }
  @media (min-width: 2000px) {
    .classic-bottle:after {
      background-image: url("/img-dist/2000/classic-bottle.png"); } }

.buzina-bottle .prodContent {
  position: absolute;
  top: 16.375rem;
  left: 19.125rem; }
  .buzina-bottle .prodContent .close {
    top: -2.0625rem;
    right: -0.4375rem; }
.buzina-bottle:after {
  content: '';
  display: block;
  background-repeat: no-repeat;
  height: 50rem;
  width: 37.5rem;
  position: absolute;
  top: -1.875rem;
  right: 11.5rem;
  -webkit-transform: rotate(75deg);
  -moz-transform: rotate(75deg);
  -ms-transform: rotate(75deg);
  -o-transform: rotate(75deg);
  transform: rotate(75deg);
  z-index: 2;
  background-image: url("/img-dist/1024/buzina-bottle.png"); }
  @media (min-width: 1024px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1024/buzina-bottle.png"); } }
  @media (min-width: 1152px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1152/buzina-bottle.png"); } }
  @media (min-width: 1280px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1280/buzina-bottle.png"); } }
  @media (min-width: 1366px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1366/buzina-bottle.png"); } }
  @media (min-width: 1400px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1400/buzina-bottle.png"); } }
  @media (min-width: 1440px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1440/buzina-bottle.png"); } }
  @media (min-width: 1536px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1536/buzina-bottle.png"); } }
  @media (min-width: 1600px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1600/buzina-bottle.png"); } }
  @media (min-width: 1680px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1680/buzina-bottle.png"); } }
  @media (min-width: 1980px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/1980/buzina-bottle.png"); } }
  @media (min-width: 2000px) {
    .buzina-bottle:after {
      background-image: url("/img-dist/2000/buzina-bottle.png"); } }

/*# sourceMappingURL=all.css.map */
